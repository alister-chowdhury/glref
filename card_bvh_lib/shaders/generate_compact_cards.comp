#version 460

#define USING_LOAD_CARD_DATA    1
#define CARD_DATA_BINDING       2


#include "card_common.glsl"


layout(location = 0) uniform uint numCards;
layout(rgba32f, binding=0) uniform image1D cardOrigins;
layout(rgba32f, binding=1) uniform image1D cardBBoxs;



layout(local_size_x=64) in;


void main()
{    
    if(gl_GlobalInvocationID.x < numCards)
    {
        CardData card = loadCardData(gl_GlobalInvocationID.x);
        vec3 P0 = getCardPoint(card, 0);
        vec3 P1 = getCardPoint(card, 1);
        vec3 P2 = getCardPoint(card, 2);
        vec3 P3 = getCardPoint(card, 3);

        vec3 bboxMin = min(min(P0, P1), min(P2, P3));
        vec3 bboxMax = max(max(P0, P1), max(P2, P3));
        vec3 center = (bboxMin + bboxMax) * 0.5;

        imageStore(cardOrigins, int(gl_GlobalInvocationID.x), vec4(center, 0));
        imageStore(cardBBoxs, int(gl_GlobalInvocationID.x << 1) + 0, vec4(bboxMin, 0));
        imageStore(cardBBoxs, int(gl_GlobalInvocationID.x << 1) + 1, vec4(bboxMax, 0));
    }
}
